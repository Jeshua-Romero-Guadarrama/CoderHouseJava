<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  La etiqueta <project> define un proyecto Maven. 
  Contiene toda la información para compilar y empaquetar la aplicación.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!-- Versión estándar del modelo de POM (Project Object Model) en Maven -->
  <modelVersion>4.0.0</modelVersion>

  <!-- 
    groupId, artifactId, version y packaging son campos fundamentales que identifican el proyecto.
  -->
  <groupId>com.ejemplo</groupId>
  <artifactId>ClienteApiRestRomero</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <!-- Nombre que describe el proyecto -->
  <name>ClienteApiRestRomero</name>

  <!-- 
    <properties> define variables que se pueden usar dentro del POM.
    Aquí se indica la versión de Java y la versión de Spring Boot.
  -->
  <properties>
    <!-- Selecciona la versión de Java a usar (8, 11, 17, etc.) -->
    <java.version>17</java.version>
    <!-- Versión de Spring Boot que gestiona las versiones de las dependencias internas -->
    <spring-boot.version>3.0.0</spring-boot.version>
  </properties>

  <!-- 
    <dependencyManagement> es la forma en que importamos el BOM (Bill of Materials) de Spring Boot. 
    El BOM fija las versiones de todas las librerías de Spring, evitando conflictos de versiones.
  -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- 
    Se definen las dependencias que usará la aplicación:
    - Starter Web: para construir APIs REST con Spring Boot y Tomcat embebido.
    - Starter Data JPA: para usar JPA y Hibernate en la capa de persistencia.
    - H2: base de datos en memoria para desarrollo.
  -->
  <dependencies>

    <!-- Starter para crear aplicaciones web (controllers, JSON, etc.) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Starter para usar JPA (Hibernate) y persistir datos en la BD -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <!-- Driver H2 para base de datos en memoria (solo en tiempo de ejecución) -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <!-- 
    Sección de compilación (build). Aquí agregamos plugins de Maven.
    El plugin de Spring Boot (spring-boot-maven-plugin) es crucial para empaquetar la aplicación en un "fat jar" o "uber jar" 
    con todas las dependencias y un main class en el MANIFEST.
  -->
  <build>
    <plugins>
      <!-- Plugin de Spring Boot para empaquetar en un .jar ejecutable -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!-- Se usa la versión definida en la propiedad spring-boot.version -->
        <version>${spring-boot.version}</version>
        <!-- Aseguramos que se ejecute el goal repackage -->
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Especifica la clase principal de la aplicación -->
          <mainClass>com.ejemplo.ClienteApiRestRomeroApplication</mainClass>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>